<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>施工中</title>
  
  <subtitle>记录生活</subtitle>
  <link href="http://www.zhengtianyu.com/atom.xml" rel="self"/>
  
  <link href="http://www.zhengtianyu.com/"/>
  <updated>2021-08-23T07:23:32.650Z</updated>
  <id>http://www.zhengtianyu.com/</id>
  
  <author>
    <name>DDDivano</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>阴阳师御魂整理</title>
    <link href="http://www.zhengtianyu.com/2021/08/22/%E9%98%B4%E9%98%B3%E5%B8%88%E5%BE%A1%E9%AD%82%E6%95%B4%E7%90%86/"/>
    <id>http://www.zhengtianyu.com/2021/08/22/%E9%98%B4%E9%98%B3%E5%B8%88%E5%BE%A1%E9%AD%82%E6%95%B4%E7%90%86/</id>
    <published>2021-08-22T12:49:34.000Z</published>
    <updated>2021-08-23T07:23:32.650Z</updated>
    
    <content type="html"><![CDATA[<h1 id="阴阳师御魂整理"><a href="#阴阳师御魂整理" class="headerlink" title="阴阳师御魂整理"></a>阴阳师御魂整理</h1><blockquote><p>主要记录御魂相关内容</p></blockquote><span id="more"></span><h1 id="御魂时间轮换表"><a href="#御魂时间轮换表" class="headerlink" title="御魂时间轮换表"></a>御魂时间轮换表</h1><p><img src="/2021/08/22/%E9%98%B4%E9%98%B3%E5%B8%88%E5%BE%A1%E9%AD%82%E6%95%B4%E7%90%86/%E5%BE%A1%E9%AD%82%E6%97%B6%E9%97%B4%E8%BD%AE%E6%8D%A2%E8%A1%A8.jpeg" alt="御魂时间轮换表"></p><h1 id="御魂主属性数值参考"><a href="#御魂主属性数值参考" class="headerlink" title="御魂主属性数值参考"></a>御魂主属性数值参考</h1><p><img src="/2021/08/22/%E9%98%B4%E9%98%B3%E5%B8%88%E5%BE%A1%E9%AD%82%E6%95%B4%E7%90%86/%E5%BE%A1%E9%AD%82%E4%B8%BB%E5%B1%9E%E6%80%A7%E6%95%B0%E5%80%BC%E7%BB%9F%E8%AE%A1.jpeg" alt="御魂主属性数值参考"></p><h1 id="御魂副属性数值参考"><a href="#御魂副属性数值参考" class="headerlink" title="御魂副属性数值参考"></a>御魂副属性数值参考</h1><p><img src="/2021/08/22/%E9%98%B4%E9%98%B3%E5%B8%88%E5%BE%A1%E9%AD%82%E6%95%B4%E7%90%86/%E5%BE%A1%E9%AD%82%E5%89%AF%E5%B1%9E%E6%80%A7%E6%95%B0%E5%80%BC%E7%BB%9F%E8%AE%A1.jpeg" alt="御魂副属性数值参考"></p><h1 id="御魂整理方案"><a href="#御魂整理方案" class="headerlink" title="御魂整理方案"></a><a href="https://www.bilibili.com/read/cv12566258">御魂整理方案</a></h1><p><a href="https://www.bilibili.com/read/cv12566258">御魂整理方案</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;阴阳师御魂整理&quot;&gt;&lt;a href=&quot;#阴阳师御魂整理&quot; class=&quot;headerlink&quot; title=&quot;阴阳师御魂整理&quot;&gt;&lt;/a&gt;阴阳师御魂整理&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;主要记录御魂相关内容&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="游戏人生" scheme="http://www.zhengtianyu.com/categories/%E6%B8%B8%E6%88%8F%E4%BA%BA%E7%94%9F/"/>
    
    <category term="阴阳师" scheme="http://www.zhengtianyu.com/categories/%E6%B8%B8%E6%88%8F%E4%BA%BA%E7%94%9F/%E9%98%B4%E9%98%B3%E5%B8%88/"/>
    
    
  </entry>
  
  <entry>
    <title>阴阳师必备游戏手册</title>
    <link href="http://www.zhengtianyu.com/2021/08/22/%E9%98%B4%E9%98%B3%E5%B8%88%E5%BF%85%E5%A4%87%E6%B8%B8%E6%88%8F%E6%89%8B%E5%86%8C/"/>
    <id>http://www.zhengtianyu.com/2021/08/22/%E9%98%B4%E9%98%B3%E5%B8%88%E5%BF%85%E5%A4%87%E6%B8%B8%E6%88%8F%E6%89%8B%E5%86%8C/</id>
    <published>2021-08-22T07:09:15.000Z</published>
    <updated>2021-08-22T13:23:57.812Z</updated>
    
    <content type="html"><![CDATA[<h1 id="阴阳师必备游戏手册"><a href="#阴阳师必备游戏手册" class="headerlink" title="阴阳师必备游戏手册"></a>阴阳师必备游戏手册</h1><blockquote><p>主要记录日常，周常，怪物，资源获取等内容</p></blockquote><span id="more"></span><h1 id="悬赏任务怪物分布"><a href="#悬赏任务怪物分布" class="headerlink" title="悬赏任务怪物分布"></a>悬赏任务怪物分布</h1><p><img src="/2021/08/22/%E9%98%B4%E9%98%B3%E5%B8%88%E5%BF%85%E5%A4%87%E6%B8%B8%E6%88%8F%E6%89%8B%E5%86%8C/%E6%82%AC%E8%B5%8F%E4%BB%BB%E5%8A%A1.png" alt="悬赏任务怪物分布"></p><h1 id="日常打卡"><a href="#日常打卡" class="headerlink" title="日常打卡"></a>日常打卡</h1><ol><li>地域鬼王</li><li>免费一抽 （必须签到500天）</li><li>喂猫喂狗</li><li>寮30</li><li>商店黑蛋</li><li>大神登录</li><li>每日任务</li><li>寮碎片祈愿，赠予</li><li>结界卡，蹭卡<br>以上尽量都做</li></ol><hr><p>以下选做<br>10. 式神委派<br>11. 50协战<br>12. 金币大作战<br>13. 石距，年兽</p><h1 id="周常打卡"><a href="#周常打卡" class="headerlink" title="周常打卡"></a>周常打卡</h1><ol><li>图鉴分享</li><li>鬼王分享</li><li>竞速本</li><li>寮功勋</li><li>勋章商店</li><li>友情白蛋</li><li>荣誉商店</li><li>蛇皮商店</li></ol><h1 id="每日活动"><a href="#每日活动" class="headerlink" title="每日活动"></a>每日活动</h1><ol><li>寮突破</li><li>结界突破</li><li>逢魔</li><li>道馆</li><li>狩猎战</li></ol><h1 id="式神升星养成攻略"><a href="#式神升星养成攻略" class="headerlink" title="式神升星养成攻略"></a>式神升星养成攻略</h1><h2 id="准备狗粮方式"><a href="#准备狗粮方式" class="headerlink" title="准备狗粮方式"></a>准备狗粮方式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">2-&gt;3</span><br><span class="line">全部的N卡2星升满级，吃红蛋变3星。</span><br><span class="line">3-&gt;4</span><br><span class="line">3星白蛋吃三星n卡到4星。</span><br><span class="line">4-&gt;5</span><br><span class="line">4星满级白蛋吃刚到4星白蛋升至5星白蛋。</span><br><span class="line">5-&gt;6</span><br><span class="line">5个5星白蛋给五星式神到6</span><br></pre></td></tr></table></figure><h2 id="二星到三星养成"><a href="#二星到三星养成" class="headerlink" title="二星到三星养成"></a>二星到三星养成</h2><p>式神到20级，吃2个2星N卡红蛋。 2w金</p><h2 id="三星升级四星"><a href="#三星升级四星" class="headerlink" title="三星升级四星"></a>三星升级四星</h2><p>式神25级， 吃3个3星N卡红蛋，3w金</p><h2 id="四星升级五星"><a href="#四星升级五星" class="headerlink" title="四星升级五星"></a>四星升级五星</h2><p>式神30级， 吃4个4星白蛋，4w金</p><h2 id="五星升级六星"><a href="#五星升级六星" class="headerlink" title="五星升级六星"></a>五星升级六星</h2><p>式神35级，吃5个5星白蛋，5w金</p><hr><p><strong>总计：</strong><br>一个式神从2星升级到6星<br>狗粮需要：5个5星白蛋+20个4星白蛋+60个3星N卡+120个红蛋or2星n卡<br>5星式神需要：4个4星白蛋+12个3星N卡+24个红蛋or2星n卡<br>共需要：29个高星白蛋+216个N卡</p><p>如果白蛋都是从2级升上来，这个不再额外计算。</p><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="经验获取表"><a href="#经验获取表" class="headerlink" title="经验获取表"></a>经验获取表</h2><p><img src="/2021/08/22/%E9%98%B4%E9%98%B3%E5%B8%88%E5%BF%85%E5%A4%87%E6%B8%B8%E6%88%8F%E6%89%8B%E5%86%8C/%E7%BB%8F%E9%AA%8C%E8%8E%B7%E5%8F%96.jpeg" alt="经验获取表"></p><h2 id="经验需求表"><a href="#经验需求表" class="headerlink" title="经验需求表"></a>经验需求表</h2><p><img src="/2021/08/22/%E9%98%B4%E9%98%B3%E5%B8%88%E5%BF%85%E5%A4%87%E6%B8%B8%E6%88%8F%E6%89%8B%E5%86%8C/%E7%BB%8F%E9%AA%8C%E9%9C%80%E6%B1%82.jpeg" alt="经验需求表"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;阴阳师必备游戏手册&quot;&gt;&lt;a href=&quot;#阴阳师必备游戏手册&quot; class=&quot;headerlink&quot; title=&quot;阴阳师必备游戏手册&quot;&gt;&lt;/a&gt;阴阳师必备游戏手册&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;主要记录日常，周常，怪物，资源获取等内容&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="游戏人生" scheme="http://www.zhengtianyu.com/categories/%E6%B8%B8%E6%88%8F%E4%BA%BA%E7%94%9F/"/>
    
    <category term="阴阳师" scheme="http://www.zhengtianyu.com/categories/%E6%B8%B8%E6%88%8F%E4%BA%BA%E7%94%9F/%E9%98%B4%E9%98%B3%E5%B8%88/"/>
    
    
  </entry>
  
  <entry>
    <title>深度学习框架入门</title>
    <link href="http://www.zhengtianyu.com/2021/08/20/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6%E5%85%A5%E9%97%A8/"/>
    <id>http://www.zhengtianyu.com/2021/08/20/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6%E5%85%A5%E9%97%A8/</id>
    <published>2021-08-20T10:38:59.000Z</published>
    <updated>2021-08-27T08:39:40.738Z</updated>
    
    <content type="html"><![CDATA[<h1 id="深度学习框架入门"><a href="#深度学习框架入门" class="headerlink" title="深度学习框架入门"></a>深度学习框架入门</h1><blockquote><p>本篇文章介绍深度学习框架基础知识，并手动实现基础逻辑。</p></blockquote><span id="more"></span><h1 id="深度学习框架是什么"><a href="#深度学习框架是什么" class="headerlink" title="深度学习框架是什么"></a>深度学习框架是什么</h1><p>深度学习框架就是一套用于深度学习的函数。在深度学习中，有这样几种基本操作：卷积，池化，全连接，二分类多分类，反向传播等。好处是你不必重复造轮子，模型也就是积木，是给你的，你可以直接组装。</p><p>用深度学习框架构建模型大概可以分成以下几部分：<br><img src="/2021/08/20/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6%E5%85%A5%E9%97%A8/%E6%A8%A1%E5%9E%8B%E7%BB%93%E6%9E%84.png" alt="模型结构"></p><p>当然，你用深度学习框架，实现这几部分的功能后，就可以正常的去跑一个模型训练，就实现了模型训练的基本功能。但是框架能够实现的远远不止这些，比如额外的有，分布式相关的管理控制，内存显存优化，模型存储，丰富的打印函数，调试工具，部署工具和部署库。但是这些都是基于深度学习衍生出来的工程向的内容，那么对于深度学习本身来说，最重要的功能，一是丰富的算子库，二是自动求导。这可以极大的减少我们的工作量。</p><h1 id="深度学习运行机制"><a href="#深度学习运行机制" class="headerlink" title="深度学习运行机制"></a>深度学习运行机制</h1><p>深度学习框架看着很庞大，其实实现核心内容，是一个非常直观且容易的事情。我们知道，深度学习梯度计算就是使用了链式法则，这个反向计算是深度学习框架的一大重要组成部分。对于一个模型来说，前向和反向的迭代计算占据了一个模型90%的工作量。我们只需要按照上一小节，实现相关模块，便可以手动写一个深度学习训练出来。</p><p>实际上除了要实现的计算层之外，深度学习本质就是一个前向和反向的过程。对于前向，我们可以使用numpy进行计算得到，事实上numpy几乎可以实现现有90%以上深度学习网络的过程。对于反向，需要我们自己来实现相关代码，即求导过程。对于复杂网络，这个代码实现起来异常复杂，而框架恰恰帮我们解决了这个痛点。</p><h2 id="实现数据输入"><a href="#实现数据输入" class="headerlink" title="实现数据输入"></a>实现数据输入</h2><p>我们从最最最简单开始写起，加入我们有一个训练内容。给数据输入1，让他返回2。去找到符合这个的一个模型。那么输入内容就是<code>array([1, 2])</code>。相应的reader实现:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">def reader(data):</span><br><span class="line">return enumerate(data)</span><br></pre></td></tr></table></figure><h2 id="网络层实现"><a href="#网络层实现" class="headerlink" title="网络层实现"></a>网络层实现</h2><p>我们假设该网络就是简单的线性拟合<code>y = Wx + B</code>，那么对于网络整体结构，可以如下图表示<br><img src="/2021/08/20/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6%E5%85%A5%E9%97%A8/%E7%BD%91%E7%BB%9C%E6%95%B4%E4%BD%93%E7%BB%93%E6%9E%84.png" alt="网络整体结构"><br>设计相关代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">class Layer(object):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.w = random.randint(-10, 10)</span><br><span class="line">        self.g = None</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Mul(Layer):</span><br><span class="line">    def forward(self, x):</span><br><span class="line">        return self.w * x</span><br><span class="line"></span><br><span class="line">    def backward(self, x, grad):</span><br><span class="line">        self.g = grad * x</span><br></pre></td></tr></table></figure><h2 id="损失函数实现"><a href="#损失函数实现" class="headerlink" title="损失函数实现"></a>损失函数实现</h2><p>损失函数如图所示就是一个减法误差的平方，我们将他最小化。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">class Loss(object):</span><br><span class="line"></span><br><span class="line">    def forward(self, out, label):</span><br><span class="line">        self.out = out</span><br><span class="line">        self.label = label</span><br><span class="line">        return (label - out) ** 2</span><br><span class="line"></span><br><span class="line">    def backward(self):</span><br><span class="line">        self.g = 2 * (self.label - self.out) * (-1)</span><br></pre></td></tr></table></figure><h2 id="优化器实现"><a href="#优化器实现" class="headerlink" title="优化器实现"></a>优化器实现</h2><p>优化器使用传统的梯度下降</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">class Opt(object):</span><br><span class="line">    def __init__(self, lr):</span><br><span class="line">        self.lr = lr</span><br><span class="line"></span><br><span class="line">    def minimize(self, layer):</span><br><span class="line">        layer.w = layer.w - layer.g * self.lr</span><br></pre></td></tr></table></figure><h2 id="训练效果"><a href="#训练效果" class="headerlink" title="训练效果"></a>训练效果</h2><p>黄色为收敛cost曲线，蓝色为W值变化曲线<br><img src="/2021/08/20/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6%E5%85%A5%E9%97%A8/%E7%BB%93%E6%9E%9C.png" alt="结果"></p><h2 id="整体代码"><a href="#整体代码" class="headerlink" title="整体代码"></a>整体代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">import random</span><br><span class="line">import time</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line"># random.seed(33)</span><br><span class="line"></span><br><span class="line">class Layer(object):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.w = random.randint(-10, 10)</span><br><span class="line">        self.g = None</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Mul(Layer):</span><br><span class="line">    def forward(self, x):</span><br><span class="line">        return self.w * x</span><br><span class="line"></span><br><span class="line">    def backward(self, x, grad):</span><br><span class="line">        self.g = grad * x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Loss(object):</span><br><span class="line"></span><br><span class="line">    def forward(self, out, label):</span><br><span class="line">        self.out = out</span><br><span class="line">        self.label = label</span><br><span class="line">        return (label - out) ** 2</span><br><span class="line"></span><br><span class="line">    def backward(self):</span><br><span class="line">        self.g = 2 * (self.label - self.out) * (-1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Opt(object):</span><br><span class="line">    def __init__(self, lr):</span><br><span class="line">        self.lr = lr</span><br><span class="line"></span><br><span class="line">    def minimize(self, layer):</span><br><span class="line">        layer.w = layer.w - layer.g * self.lr</span><br><span class="line"></span><br><span class="line">def reader(data):</span><br><span class="line">    return enumerate(data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def run():</span><br><span class="line">    epoch = 200</span><br><span class="line">    d = [[1, 2], [2, 4]]</span><br><span class="line">    model = Mul()</span><br><span class="line">    loss = Loss()</span><br><span class="line">    opt = Opt(lr=0.01)</span><br><span class="line">    print(&quot;[w] init is &#123;&#125;&quot;.format(model.w))</span><br><span class="line">    # time.sleep(2)</span><br><span class="line">    plt.figure()</span><br><span class="line"></span><br><span class="line">    all = []</span><br><span class="line">    all_w = []</span><br><span class="line">    for i in range(epoch):</span><br><span class="line">        print(&quot;[Epoch] &#123;&#125;&quot;.format(i, ))</span><br><span class="line"></span><br><span class="line">        for bid, data in reader(d):</span><br><span class="line">            label = data[1]</span><br><span class="line">            input = data[0]</span><br><span class="line">            out = model.forward(input)</span><br><span class="line">            cost = loss.forward(out, label)</span><br><span class="line">            print(&quot;[cost] is &#123;&#125;&quot;.format(cost))</span><br><span class="line">            loss.backward()</span><br><span class="line">            model.backward(input, loss.g)</span><br><span class="line">            opt.minimize(model)</span><br><span class="line">            print(&quot;[w value] is &#123;&#125;&quot;.format(model.w))</span><br><span class="line">            print(&quot;=============================&quot;)</span><br><span class="line">        all_w.append(model.w)</span><br><span class="line">            # time.sleep(1)</span><br><span class="line">        all.append(cost)</span><br><span class="line">        print(i)</span><br><span class="line">        plt.plot(all)</span><br><span class="line">        plt.plot(all_w)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">run()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;深度学习框架入门&quot;&gt;&lt;a href=&quot;#深度学习框架入门&quot; class=&quot;headerlink&quot; title=&quot;深度学习框架入门&quot;&gt;&lt;/a&gt;深度学习框架入门&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;本篇文章介绍深度学习框架基础知识，并手动实现基础逻辑。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="深度学习" scheme="http://www.zhengtianyu.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="框架入门" scheme="http://www.zhengtianyu.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E6%A1%86%E6%9E%B6%E5%85%A5%E9%97%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>md 基本操作</title>
    <link href="http://www.zhengtianyu.com/2021/08/18/md-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://www.zhengtianyu.com/2021/08/18/md-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</id>
    <published>2021-08-18T09:39:51.000Z</published>
    <updated>2021-08-18T11:56:25.155Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MD基本操作"><a href="#MD基本操作" class="headerlink" title="MD基本操作"></a>MD基本操作</h1><blockquote><p>这篇文章用来测试模板展示效果，以及查找对应的格式写法</p></blockquote><span id="more"></span><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//形式一</span><br><span class="line">+ a</span><br><span class="line">+ b</span><br><span class="line">+ c</span><br><span class="line">//形式二</span><br><span class="line">- d</span><br><span class="line">- e</span><br><span class="line">- f</span><br><span class="line">//形式三</span><br><span class="line">* g</span><br><span class="line">* h</span><br><span class="line">* i</span><br></pre></td></tr></table></figure><p>//形式一</p><ul><li>a</li><li>b</li><li>c</li></ul><p>//形式二</p><ul><li>d</li><li>e</li><li>f</li></ul><p>//形式三</p><ul><li>g</li><li>h</li><li>i</li></ul><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//正常形式</span><br><span class="line">1. abc</span><br><span class="line">2. bcd</span><br><span class="line">3. cde</span><br><span class="line">//错序效果</span><br><span class="line">2. fgh</span><br><span class="line">3. ghi</span><br><span class="line">5. hij</span><br></pre></td></tr></table></figure><p>//正常形式</p><ol><li>abc</li><li>bcd</li><li>cde</li></ol><p>//错序效果</p><ol start="2"><li>fgh</li><li>ghi</li><li>hij</li></ol><h2 id="嵌套列表"><a href="#嵌套列表" class="headerlink" title="嵌套列表"></a>嵌套列表</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//无序列表嵌套</span><br><span class="line">+ 123</span><br><span class="line">    + abc</span><br><span class="line">    + bcd</span><br><span class="line">    + cde</span><br><span class="line">+ 465</span><br><span class="line">+ 789</span><br><span class="line">//有序列表嵌套</span><br><span class="line">1. abcd</span><br><span class="line">    1. abcde</span><br><span class="line">    2. abcde</span><br><span class="line">    3. abcde</span><br><span class="line">2. bcde</span><br><span class="line">3. cdef</span><br></pre></td></tr></table></figure><p>//无序列表嵌套</p><ul><li>123<ul><li>abc</li><li>bcd</li><li>cde</li></ul></li><li>465</li><li>789</li></ul><p>//有序列表嵌套</p><ol><li>abcd<ol><li>abcde</li><li>abcde</li><li>abcde</li></ol></li><li>bcde</li><li>cdef</li></ol><h1 id="引用区块"><a href="#引用区块" class="headerlink" title="引用区块"></a>引用区块</h1><p>对某个部分做的内容做一些说明或者引用某某的话等，可以用这个语法。</p><h2 id="正常形式"><a href="#正常形式" class="headerlink" title="正常形式"></a>正常形式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; 引用内容、说明内容。在语句前面加一个 &gt; ，注意是英文的那个右尖括号，注意空格，引用因为是一个区块，理论上是应该什么内容都可以放，比如说：标题，列表，引用等等。</span><br></pre></td></tr></table></figure><blockquote><p>这是一个引用</p></blockquote><h2 id="嵌套区块"><a href="#嵌套区块" class="headerlink" title="嵌套区块"></a>嵌套区块</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; 一级引用</span><br><span class="line">&gt;&gt; 二级引用</span><br><span class="line">&gt;&gt;&gt; 三级引用</span><br><span class="line">&gt;&gt;&gt;&gt; 四级引用</span><br><span class="line">&gt;&gt;&gt;&gt;&gt; 五级引用</span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt; 六级引用</span><br></pre></td></tr></table></figure><blockquote><p>一级引用</p><blockquote><p>二级引用</p><blockquote><p>三级引用</p><blockquote><p>四级引用</p><blockquote><p>五级引用</p><blockquote><p>六级引用</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><h2 id="单行代码"><a href="#单行代码" class="headerlink" title="单行代码"></a>单行代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">直接用`code`包裹</span><br></pre></td></tr></table></figure><p>查询linux文件目录和隐藏文件命令为<code>ls -al</code></p><h2 id="多行代码"><a href="#多行代码" class="headerlink" title="多行代码"></a>多行代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用```包裹 </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">这里面是多行代码</span><br><span class="line">hello world！</span><br></pre></td></tr></table></figure><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><h2 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h2><p>链接的文字放在[]中，链接地址放在随后的()中，链接也可以带title属性，链接地址后面空一格，然后用引号引起来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[百度](https://www.baidu.com &quot;百度主页&quot;)</span><br></pre></td></tr></table></figure><p><a href="https://www.baidu.com/" title="百度主页">百度</a>：点击试试</p><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>图片直接放在生成文件的同名文件夹下，直接引入即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![这是代替图片的文字，随便写](xxxx.jpeg)</span><br><span class="line">&lt;img src=mingrixiang.jpeg width=30%  /&gt;</span><br></pre></td></tr></table></figure><p><img src="/2021/08/18/md-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/mingrixiang.jpeg" alt="这是代替图片的文字，随便写"><br><img src="/2021/08/18/md-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/mingrixiang.jpeg" width="30%"></p><h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><p>分割线可以由* - _（星号，减号，底线）这3个符号的至少3个符号表示，注意至少要3个，且不需要连续，有空格也可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- - -</span><br><span class="line">------</span><br><span class="line">***</span><br><span class="line">* * *</span><br><span class="line">******</span><br><span class="line">___</span><br><span class="line">_ _ _</span><br><span class="line">______</span><br></pre></td></tr></table></figure><p>效果都一样</p><hr><h1 id="强调字体"><a href="#强调字体" class="headerlink" title="强调字体"></a>强调字体</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">*DDDivano*  倾斜</span><br><span class="line">**DDDivano**   加粗</span><br><span class="line">_DDDivano_   倾斜</span><br><span class="line">__DDDivano__    加粗</span><br><span class="line">***DDDivano***    倾斜加粗</span><br><span class="line">~~DDDivano~~  删除</span><br></pre></td></tr></table></figure><p><em>DDDivano</em>  倾斜<br><strong>DDDivano</strong>   加粗<br><em>DDDivano</em>   倾斜<br><strong>DDDivano</strong>    加粗<br><em><strong>DDDivano</strong></em>    倾斜加粗<br><del>DDDivano</del>  删除</p><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">//例子一</span><br><span class="line">|123|234|345|</span><br><span class="line">|:-|:-:|-:|</span><br><span class="line">|abc|bcd|cde|</span><br><span class="line">|abc|bcd|cde|</span><br><span class="line">|abc|bcd|cde|</span><br><span class="line">//例子二</span><br><span class="line">|123|234|345|</span><br><span class="line">|:---|:---:|---:|</span><br><span class="line">|abc|bcd|cde|</span><br><span class="line">|abc|bcd|cde|</span><br><span class="line">|abc|bcd|cde|</span><br><span class="line">//例子三</span><br><span class="line">123|234|345</span><br><span class="line">:-|:-:|-:</span><br><span class="line">abc|bcd|cde</span><br><span class="line">abc|bcd|cde</span><br><span class="line">abc|bcd|cde</span><br></pre></td></tr></table></figure><p>//例子一</p><table><thead><tr><th align="left">123</th><th align="center">234</th><th align="right">345</th></tr></thead><tbody><tr><td align="left">abc</td><td align="center">bcd</td><td align="right">cde</td></tr><tr><td align="left">abc</td><td align="center">bcd</td><td align="right">cde</td></tr><tr><td align="left">abc</td><td align="center">bcd</td><td align="right">cde</td></tr></tbody></table><p>//例子二</p><table><thead><tr><th align="left">123</th><th align="center">234</th><th align="right">345</th></tr></thead><tbody><tr><td align="left">abc</td><td align="center">bcd</td><td align="right">cde</td></tr><tr><td align="left">abc</td><td align="center">bcd</td><td align="right">cde</td></tr><tr><td align="left">abc</td><td align="center">bcd</td><td align="right">cde</td></tr></tbody></table><p>//例子三</p><table><thead><tr><th align="left">123</th><th align="center">234</th><th align="right">345</th></tr></thead><tbody><tr><td align="left">abc</td><td align="center">bcd</td><td align="right">cde</td></tr><tr><td align="left">abc</td><td align="center">bcd</td><td align="right">cde</td></tr><tr><td align="left">abc</td><td align="center">bcd</td><td align="right">cde</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;MD基本操作&quot;&gt;&lt;a href=&quot;#MD基本操作&quot; class=&quot;headerlink&quot; title=&quot;MD基本操作&quot;&gt;&lt;/a&gt;MD基本操作&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;这篇文章用来测试模板展示效果，以及查找对应的格式写法&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="编程技术" scheme="http://www.zhengtianyu.com/categories/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/"/>
    
    <category term="md" scheme="http://www.zhengtianyu.com/categories/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/md/"/>
    
    
  </entry>
  
  <entry>
    <title>git 基本操作</title>
    <link href="http://www.zhengtianyu.com/2021/08/18/git-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://www.zhengtianyu.com/2021/08/18/git-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</id>
    <published>2021-08-18T09:16:52.000Z</published>
    <updated>2021-08-20T09:41:18.222Z</updated>
    
    <content type="html"><![CDATA[<h1 id="git-基本操作"><a href="#git-基本操作" class="headerlink" title="git 基本操作"></a>git 基本操作</h1><blockquote><p>用来记录Git常用命令</p></blockquote><span id="more"></span><h1 id="git-提交代码三板斧"><a href="#git-提交代码三板斧" class="headerlink" title="git 提交代码三板斧"></a>git 提交代码三板斧</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add</span><br><span class="line">git commit -m &quot;your comment&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>这三条命令即可完成90%的日常工作。</p><h1 id="git-clone代码"><a href="#git-clone代码" class="headerlink" title="git clone代码"></a>git clone代码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/WeakAuras/WeakAuras2.git      # 克隆wa代码仓库</span><br><span class="line">git clone -b bc https://github.com/WeakAuras/WeakAuras2.git   # 克隆wa代码仓库bc分支  -b (分支名，指定分支，不指定就是默认分支)</span><br><span class="line">git clone https://github.com/WeakAuras/WeakAuras2.git  aaa  # 克隆wa代码仓库并命名为aaa</span><br></pre></td></tr></table></figure><h1 id="git-分支管理"><a href="#git-分支管理" class="headerlink" title="git 分支管理"></a>git 分支管理</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git branch    # 查看分支</span><br><span class="line">git branch xxx # 创建分支</span><br><span class="line">git branch -a  # 查看全部分支 包括远程仓库</span><br><span class="line">git branch -D  xxx # 删除 xxx分支</span><br><span class="line">git checkout -b xxx # 创建并checkout 过去</span><br><span class="line">git checkout xxx # 切换到xxx分支</span><br></pre></td></tr></table></figure><p><code>git branch</code> 创建一个分支后，该分支起始点即是创建当前所在分支点。创建分支切换，不会更改本地未在git仓库的文件，即未进行git add的文件，所以不用担心会影响本地修改。但是如果checkout的分支与本地目前文件存在冲突，需要手动处理。<br>例如：分支a下，新建文件a，checkout 分支b， 分支b本身存在文件a，那就会报冲突。<br><code>git merge xxx</code> 用来把xxx分支合并到当前分支。 比如把b分支合并到a分支，需要切换到a分支<code>git checkout a</code>，使用<code>git merge b</code>进行合并。如果有冲突需要手动解决冲突。</p><h1 id="git-标签管理"><a href="#git-标签管理" class="headerlink" title="git 标签管理"></a>git 标签管理</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git tag xxx # 打标签名字为xxx</span><br><span class="line">git tag -d xxx #删除xxx标签</span><br><span class="line">git push并不会把tag标签传送到远端服务器上，只有通过显式命令才能分享标签到远端仓库。</span><br><span class="line">git push origin v1.0 # 将本地v1.0的tag推送到远端服务器</span><br><span class="line">git push [origin] --tags # push 全部tag</span><br></pre></td></tr></table></figure><blockquote><p><code>git tag</code>和<code>git branch</code>区别是，分支是可以进行后续开发，标识一个提交代码全过程的commit，<code>git tag</code>只能标识一个特定的commit，可以理解成commit的友好名字（别名）。</p></blockquote><h1 id="git-push提交远程仓库"><a href="#git-push提交远程仓库" class="headerlink" title="git push提交远程仓库"></a>git push提交远程仓库</h1><p>如果你的git代码仓库是从github拉取下来的，默认远程仓库的名字叫origin</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git push origin xxx  # 将xxx分支推送到远程xxx分支</span><br><span class="line">git push origin xxx:xxx  # 将xxx分支推送到远程xxx分支</span><br><span class="line">同理也可以如下操作</span><br><span class="line">git push origin xxx:aaa #将xxx分支推送到远程aaa分支，如果能automerge就merge，不能就手动解决。</span><br><span class="line">git push origin :aaa # 将空分支推送到远程aaa分支，意思就是把远程aaa分支删了。</span><br></pre></td></tr></table></figure><h1 id="git-开源仓库贡献代码"><a href="#git-开源仓库贡献代码" class="headerlink" title="git 开源仓库贡献代码"></a>git 开源仓库贡献代码</h1><p>这一块相对来说会复杂一些，需要对git有深入的理解。贡献开源代码并不像自己提交远程仓库那样，直接push origin就可以，需要使用pull request的方式，具体原因请自行百度。<br>简要来说，步骤如下：</p><ol><li>fork开源代码仓库</li><li>git clone自己fork的仓库到本地</li><li>本地改完了，提交代码到自己fork的仓库</li><li>在自己fork的仓库网页处发起pull request到开源仓库</li></ol><p>2，3步骤和自己提交远程仓库没有区别。1，4步需要在github的网页用鼠标点击操作，也是没有什么难度。具体难点在于，提交了一个代码后，下一次提交如何基于远程最新的代码进行提交，防止pull request的时候出现冲突。即，同步主仓库最新的代码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git remote add upstream git@github.com:PaddlePaddle/Paddle.git  # 把远程仓库加入到本地关联中， 这里upstream可以叫任何名字，等同于origin</span><br><span class="line">git fetch upstream  # 更新远程仓库</span><br><span class="line">git merge upstream/develop # 把远程仓库develop分支 merge到当前分支，保持同步。解决冲突</span><br><span class="line"># 或者有另外一种方法</span><br><span class="line">git checkout upstream/develop </span><br><span class="line">git branch xxxx &amp;&amp; git checkout xxxx       # checkout 最新主库分支，并基于主库分支创建一个本地的分支，后续修改直接在xxxx分支上修改</span><br></pre></td></tr></table></figure><p>以上就是如何提交pr的基本操作</p><h1 id="git-拉取pr"><a href="#git-拉取pr" class="headerlink" title="git 拉取pr"></a>git 拉取pr</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin pull/xxxx/head:pr_xxxx  # 拉取origin的xxxx（pr号）到本地的pr_xxxx分支</span><br></pre></td></tr></table></figure><h1 id="git-pull-和-git-fetch-区别"><a href="#git-pull-和-git-fetch-区别" class="headerlink" title="git pull 和 git fetch 区别"></a>git pull 和 git fetch 区别</h1><p>pull=fetch+merge，pull的话，下拉远程分支并与本地分支合并。fetch只是下拉远程分支，怎么合并，可以自己再做选择。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;git-基本操作&quot;&gt;&lt;a href=&quot;#git-基本操作&quot; class=&quot;headerlink&quot; title=&quot;git 基本操作&quot;&gt;&lt;/a&gt;git 基本操作&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;用来记录Git常用命令&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="编程技术" scheme="http://www.zhengtianyu.com/categories/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/"/>
    
    <category term="git" scheme="http://www.zhengtianyu.com/categories/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/git/"/>
    
    
  </entry>
  
  <entry>
    <title>docker 基本操作</title>
    <link href="http://www.zhengtianyu.com/2021/08/18/docker-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://www.zhengtianyu.com/2021/08/18/docker-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</id>
    <published>2021-08-18T09:13:16.000Z</published>
    <updated>2021-08-18T09:16:27.369Z</updated>
    
    <content type="html"><![CDATA[<p>docker</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;docker&lt;/p&gt;
</summary>
      
    
    
    
    <category term="编程技术" scheme="http://www.zhengtianyu.com/categories/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/"/>
    
    <category term="docker" scheme="http://www.zhengtianyu.com/categories/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/docker/"/>
    
    
    <category term="编程技术" scheme="http://www.zhengtianyu.com/tags/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/"/>
    
    <category term="docker" scheme="http://www.zhengtianyu.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>test images</title>
    <link href="http://www.zhengtianyu.com/2021/08/17/test-images/"/>
    <id>http://www.zhengtianyu.com/2021/08/17/test-images/</id>
    <published>2021-08-17T11:01:44.000Z</published>
    <updated>2021-08-18T08:46:03.801Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/08/17/test-images/avatar.jpeg" alt="这是代替图片的文字，随便写"></p><p>爱仕达大厦<br>爱仕达大厦</p><span id="more"></span><p>爱仕达大厦</p><p>爱仕达大厦</p><p>爱仕达大厦</p><p>爱仕达大厦</p><p>爱仕达大厦</p><p>爱仕达大厦</p><p>爱仕达大厦</p><p>爱仕达大厦</p><p>爱仕达大厦</p><p>爱仕达大厦</p><p>爱仕达大厦</p><p>爱仕达大厦</p><p>爱仕达大厦</p><p>爱仕达大厦</p><p>爱仕达大厦</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/08/17/test-images/avatar.jpeg&quot; alt=&quot;这是代替图片的文字，随便写&quot;&gt;&lt;/p&gt;
&lt;p&gt;爱仕达大厦&lt;br&gt;爱仕达大厦&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>my first blog</title>
    <link href="http://www.zhengtianyu.com/2021/08/17/my-first-blog/"/>
    <id>http://www.zhengtianyu.com/2021/08/17/my-first-blog/</id>
    <published>2021-08-17T10:22:25.000Z</published>
    <updated>2021-08-17T10:23:24.506Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World!"></a>Hello World!</h2><p>这应该是一个美好的开始！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Hello-World&quot;&gt;&lt;a href=&quot;#Hello-World&quot; class=&quot;headerlink&quot; title=&quot;Hello World!&quot;&gt;&lt;/a&gt;Hello World!&lt;/h2&gt;&lt;p&gt;这应该是一个美好的开始！&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="世界" scheme="http://www.zhengtianyu.com/tags/%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
</feed>
